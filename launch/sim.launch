<?xml version="1.0" encoding="UTF-8"?> 
<!-- Simulated Hex+delta arm -->
<launch>
  <rosparam file="$(find tricopter)/cfg/Hex_config.yaml" />

  <arg name="viz" default = "false"/>
  
  <param name="model_name" value="Hex_delta"/>
  <include file="$(find tricopter)/launch/spawn_gazebo.launch"/>

  <include file="$(find tricopter)/launch/geometric_controller.launch"/>
  <node pkg="trajectory_publisher" type="trajectory_publisher" name="trajectory_publisher" output="screen">
    <param name="trajectory_type" value="1" />
    <param name="shape_omega" value="0.3" />
    <param name="initpos_z" value="2.0" />
    <param name="reference_type" value="2" />
  </node>

  <rosparam>
    /mavros/local_position/tf/send: true
    /mavros/local_position/tf/frame_id: camera_init
    /mavros/local_position/tf/child_frame_id: base_link
  </rosparam>

  <include file="$(find tricopter)/launch/stabilisation.launch"/>

  <include file="$(find tricopter)/launch/static_transforms.launch"/>

  <node name="tooltip_sp_gen" pkg="tricopter" type="tooltip_sp_from_geometric_ctrl.py" required="true" output="screen"/>

  <group if="$(arg viz)">
    <!-- <node type="rviz" name="rviz" pkg="rviz" args="-d $(find tricopter)/rviz/AAM.rviz"/> -->
    <node name = "my_rqt_dashboard" pkg = "rqt_gui" type = "rqt_gui" respawn = "false" output = "screen" args = "--perspective-file $(find tricopter)/rqt/AAM.perspective"/>
  </group>
</launch>