<?xml version="1.0"?>
<launch>
    <rosparam>
        /damage_detection/map_topic_name: /map
        /damage_detection/map_frame: map
        /damage_detection/odom_frame: camera_init
        /damage_detection/model_samples: 500000
        /damage_detection/icp_voxel_size: 0.03
        /damage_detection/icp_max_iterations: 100
        /damage_detection/clustering_scale: 0.05
        /damage_detection/damage_scale: 0.03
        /damage_detection/cluster_min_points: 4

        /trajectory_planner/drone_frame: base_link
        /trajectory_planner/tooltip_frame: tooltip_init
        /trajectory_planner/frequency: 100
        /trajectory_planner/max_vel: 0.1
        /trajectory_planner/max_acc: 1.0
        /trajectory_planner/max_yawrate: 30.0
        /trajectory_planner/max_yawrate_dot: 30.0
        /trajectory_planner/hover_time: 30.0
    </rosparam>

    <!-- <node name="map_constructor" pkg="tricopter" type="map_constructor.py" required="true" output="screen"/> -->
    <node name="damage_detection" pkg="tricopter" type="damage_detection.py" required="true" output="screen">
        <param name="model_dir" value="$(find tricopter)/scans/scans_cropped.pcd" />
    </node>
    <node name="trajectory_generation" pkg="tricopter" type="trajectory_generation.py" required="true" output="screen"/>
    <node name="offboard_setpoints" pkg="tricopter" type="offboard_setpoints.py" required="true" output="screen"/>
</launch>