<?xml version="1.0"?>
<launch>
    <arg name="vehicle_name" default="hex_stewart"/> <!-- hex, hex_delta or hex_stewart -->
    <arg name="world_name" default="empty"/> <!-- ARLarena or DroneHub or empty-->
    <arg name="viz" default = "true"/>
    
    <!-- DRONE SPAWN POINT -->
    <arg name="x" default="1.0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0.5"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/>

    <!-- LAUNCH VANILLA GAZEBO SIM -->
    <include file="$(find tricopter)/launch/sim/px4_gazebo.launch">
        <arg name="x" value="$(arg x)"/>
        <arg name="y" value="$(arg y)"/>
        <arg name="z" value="$(arg z)"/>
        <arg name="R" value="$(arg R)"/>
        <arg name="P" value="$(arg P)"/>
        <arg name="Y" value="$(arg Y)"/>
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="vehicle" value="$(arg vehicle_name)"/>
    </include>

    <!-- CONTROLLER -->
    <node name="controller" pkg="tricopter" type="trajectory_controller.py" required="true" output="screen"/>
    <!-- <include file="$(find tricopter)/launch/flight_controller/ethz_pid_controller.launch"/> -->

    <!-- MANIPULATOR -->
    <include file="$(find delta_2)/launch/stabilise.launch">
        <arg name="model_name" value="$(arg vehicle_name)"/>
        <arg name="sim" value="true"/>
    </include>
    <!-- <node name="mode_switch" pkg="delta_2" type="mode_switch.py" required="true" output="screen"/> -->

    <!-- TRAJECTORY -->
    <!-- <rosparam file="$(find tricopter)/cfg/forward_backwards.yaml" /> -->
    <rosparam file="$(find tricopter)/cfg/laminiscate_points.yaml" />
    <!-- <rosparam file="$(find tricopter)/cfg/cylinder_points.yaml" /> -->
    <!-- <rosparam file="$(find tricopter)/cfg/fake_print_points.yaml" /> -->
    <rosparam file="$(find tricopter)/cfg/print_config.yaml" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="transform_map2print" args="0 0 0.5 1.570796 0 1.570796 map printing_plane" />
    <node name="trajectory_services" pkg="tricopter" type="trajectory_services.py" required="true" output="screen"/> 
    <node name="print_manager" pkg="tricopter" type="print_manager.py" output="screen" respawn="true"/>


    <!-- RVIZ AND RQT-->
    <group if="$(arg viz)">
        <node type="rviz" name="rviz" pkg="rviz" args="-d $(find tricopter)/rviz/printing.rviz"/>
    </group>
</launch>