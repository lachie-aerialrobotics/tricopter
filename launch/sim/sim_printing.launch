<?xml version="1.0"?>
<launch>
    <arg name="vehicle_name" default="hex_stewart"/> <!-- hex, hex_delta or hex_stewart -->
    <arg name="world_name" default="ARLarena"/> <!-- ARLarena or DroneHub -->
    <arg name="viz" default="true"/>
    <arg name="init" default="false"/>
    
    <!-- DRONE SPAWN POINT -->
    <arg name="x" default="0"/>
    <arg name="y" default="2"/>
    <arg name="z" default="0.5"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0.5"/>
    
    <node pkg="tf2_ros" type="static_transform_publisher" name="transform_map2camera_init" args="$(arg x) $(arg y) $(arg z) $(arg R) $(arg P) $(arg Y) map camera_init" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="transform_base_link2body" args="0 0 0 0 0 0 1 base_link body" />

    <!-- LAUNCH VANILLA GAZEBO SIM -->
    <include file="$(find tricopter)/launch/sim/px4_gazebo.launch">
        <arg name="x" value="$(arg x)"/>
        <arg name="y" value="$(arg y)"/>
        <arg name="z" value="$(arg z)"/>
        <arg name="R" value="$(arg R)"/>
        <arg name="P" value="$(arg P)"/>
        <arg name="Y" value="$(arg Y)"/>
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="vehicle" value="$(arg vehicle_name)"/>
    </include>

    <!-- LIDAR MAP SIMULATION -->
    <include file="$(find tricopter)/launch/sim/lidar_sim.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="x" value="$(arg x)"/>
        <arg name="y" value="$(arg y)"/>
        <arg name="z" value="$(arg z)"/>
    </include>

    <!-- MANIPULATOR -->
    <include file="$(find delta_2)/launch/stabilise.launch">
        <arg name="model_name" value="$(arg vehicle_name)"/>
        <arg name="sim" value="true"/>
    </include>

    <!-- PRINTING -->
    <group if="$(arg init)">
        <node name="print_initialiser" pkg="tricopter" type="print_plane_finder.py" required="true" output="screen"/>
    </group>

    <group unless="$(arg init)">
        <rosparam file="$(find tricopter)/cfg/print_config/print_origin.yaml" />
        <node name="print_layer_generator" pkg="tricopter" type="print_layer_generator.py" required="true" output="screen"/>
    </group>

    <!-- RVIZ AND RQT-->
    <group if="$(arg viz)">
        <node type="rviz" name="rviz" pkg="rviz" args="-d $(find tricopter)/rviz/registration.rviz"/>
        <node name="rqt_gui" pkg="rqt_gui" type="rqt_gui" args="--perspective-file $(find tricopter)/rviz/service_caller.perspective"/>
    </group>
</launch>